package StudentManger;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.JTableHeader;
public class StudentFace extends JFrame implements ActionListener{

	
	JButton add,close,delete,update,btfind;
	JTable table;
	JPanel panel;
	JLabel lb1;
	JTextField find;
	JTableHeader head;
	String title[]={"学号","姓名","班级","语文成绩","数学成绩","英语成绩"};
	String data[][]=new String[90][6];
	JScrollPane js;
	BaseDAOimp sql = new BaseDAOimp();
	public StudentFace() {
		setTitle("学生管理系统");
		data();
		panel = new JPanel(null);
		table = new JTable(data,title);
		table.setBounds(0, 50, 500, 300);
		table.setRowHeight(30);
		table.setFont(new Font("楷体",Font.BOLD,16));
		//滚动面板
		js = new JScrollPane(table);
		js.setBounds(0,50,780, 292);
		panel.add(js);
		lb1 = new JLabel("学生管理系统");
		lb1.setBounds(320, 10, 200, 30);
		lb1.setFont(new Font("楷体",Font.BOLD,24));
		panel.add(lb1);
		
		btfind = new JButton("搜索");
		btfind.setBounds(120, 380, 100, 30);
		panel.add(btfind);
		
		find = new JTextField();
		find.setBounds(20, 360, 100, 30);
		panel.add(find);
		
		delete = new JButton("删除");
		delete.setBounds(20, 400, 60, 30);	
		panel.add(delete);
		
		update = new JButton("修改");
		update.setBounds(100, 400, 60, 30);
		panel.add(update);
		
		add = new JButton("新增");
		add.setBounds(180, 400, 60, 30);
		panel.add(add);

		add(panel);
		setSize(800, 500);
		delete.addActionListener(this);
		update.addActionListener(this);
		add.addActionListener(this);
		
		setVisible(true);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	public static void main(String[] args) {
		new StudentFace();
	}
	public void data(){
		List<StudentVo> student = sql.studentlist();
		for (int i = 0; i < student.size(); i++) {
			StudentVo studentVo = student.get(i);
			data[i][0]=studentVo.getSno()+"";
			data[i][1]=studentVo.getStudentname();
			data[i][2]=studentVo.getSsex();
			data[i][3]=studentVo.getSage()+"";
			data[i][4]=studentVo.getShobit();
			data[i][5]=studentVo.getSzhuanye();
		}
	}
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==delete){
			int index=table.getSelectedRow();
			sql.deletestudent(data[index][0]);
			dispose();
			new StudentFace();
		}
		if(e.getSource()==update){
			int index=table.getSelectedRow();
			StudentVo studentVo = sql.findStudentVo(data[index][0]);
			new studentupdate(studentVo);
		}
		if(e.getSource()==add){
			dispose();
			new studentadd();
		}
		
	}
}
