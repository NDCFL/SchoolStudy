package QQfase;

import java.awt.AWTException;
import java.awt.Color;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

import QQbean.QQidtable;
import SQLBase.QQbase;

public class QQdenglu extends JFrame implements ActionListener,ItemListener,MouseListener,MouseMotionListener{

	private TrayIcon trayIcon = null;
	HashMap<Integer, QQidtable> hm =null;
	JLabel lbzhuce,lbfindpwd,head;
	JButton denglu,lb1,lb2,lb3;
	JComboBox txtQQid;
	JPasswordField password;
	JCheckBox jkpwd,jkdenglu;
	JLabel bg;
	public QQdenglu() {
		super("QQ登录");
		jbInit();
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Image image = toolkit.getImage("Picture/qt.png");
		setIconImage(image);
		setUndecorated(true);
		bg = new JLabel(new ImageIcon("images/47.jpg"));
		add(bg);
		
		
		lb1 = new JButton(new ImageIcon("drpicture/1.png"));
		lb1.setBounds(345, 3, 20, 20);
		lb1.setOpaque(false);
		bg.add(lb1);
		
		
		lb2 = new JButton(new ImageIcon("drpicture/2.png"));
		lb2.setBounds(378, 3, 20, 20);
		lb2.setOpaque(false);
		bg.add(lb2);
		
		lb3 = new JButton(new ImageIcon("drpicture/3.png"));
		lb3.setBounds(410, 3, 20, 20);
		lb3.setOpaque(false);
		bg.add(lb3);
		
		
		lbzhuce = new JLabel("      ");
		lbzhuce.setOpaque(false);
		lbzhuce.setBounds(330, 195, 60, 20);
		bg.add(lbzhuce);
		
		lbfindpwd = new JLabel("      ");
		lbfindpwd.setOpaque(false);
		lbfindpwd.setBounds(330, 230, 60, 20);
		bg.add(lbfindpwd);
		
		denglu= new JButton("登录");
		denglu.setOpaque(false);
		denglu.setBackground(new Color(250,250,250));
		denglu.setBounds(135, 287, 195, 30);
		denglu.setForeground(Color.white);
		bg.add(denglu);
		
		txtQQid = new JComboBox();
		txtQQid.setBounds(135, 195, 194, 30);
		txtQQid.setToolTipText("QQ账号");
		txtQQid.setEditable(true);
		bg.add(txtQQid);
		
		password = new JPasswordField();
		password.setBounds(135, 225, 194, 30);
		password.setToolTipText("QQ密码");
		bg.add(password);
		
		jkpwd = new JCheckBox("记住密码");
		jkpwd.setBounds(130, 260, 80, 20);
		bg.add(jkpwd);
		
		
		
		jkdenglu = new JCheckBox("自动登录");
		jkdenglu.setBounds(260, 260, 80, 20);
		bg.add(jkdenglu);
		
		head = new JLabel(new ImageIcon("drpicture/4.png"));
		head.setBounds(45, 195, 81, 80);
		bg.add(head);
		
		lbzhuce.addMouseListener(this);
		lbfindpwd.addMouseListener(this);
		denglu.addActionListener(this);
		lb1.addActionListener(this);
		lb2.addActionListener(this);
		lb3.addActionListener(this);
		txtQQid.addItemListener(this);
		bg.addMouseMotionListener(this);
		bg.addMouseListener(this);
		readFile();
		setSize(432, 330);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLocationRelativeTo(null);
	}
	public static void main(String[] args) {
		new QQdenglu();

	}
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource()==denglu) {
			String qqcode="";
			String pwd = password.getText().trim();
			if(txtQQid.getSelectedItem() == null){
				JOptionPane.showMessageDialog(this, "请输入QQ号码");
				return;
			}
			if(pwd.equals("")){
				JOptionPane.showMessageDialog(this, "请输入登录密码");
				return;
			}
			qqcode = txtQQid.getSelectedItem().toString();
			QQidtable idtable = new QQidtable();
			idtable.setQQid(Integer.parseInt(qqcode));
			idtable.setQQpassword(pwd);
			idtable = new QQbase().login(idtable);
			if(idtable==null){
				JOptionPane.showMessageDialog(this, "登录失败，用户名或密码错误!");
				return;
			}else{
				JOptionPane.showMessageDialog(this, "登录成功");
				try {
					saveQQ(idtable);
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
			
		}else if (e.getSource()==lb1) {
			JOptionPane.showMessageDialog(this, "你点击了设置按钮");
		}else if (e.getSource()==lb2) {
			setState(JFrame.HIDE_ON_CLOSE);
		}else if (e.getSource()==lb3) {
			System.exit(0);
		}
		
		
	}
	//保存登录成功的QQ号码到文件中
	public void saveQQ(QQidtable qt){
		HashMap<Integer, QQidtable> user =null;
		File file = new File("QQ.txt");
		try {
			if(!file.exists()){//第一次使用QQ
					file.createNewFile();
					user = new HashMap<Integer, QQidtable>();
			}else{
				FileInputStream fis = new FileInputStream(file);
				ObjectInputStream ois = new ObjectInputStream(fis);
				//读取文件内容
				user = (HashMap<Integer, QQidtable>)ois.readObject();
				fis.close();
				ois.close();
			}
			//新登录的用户信息保存到hashMap中
			user.put(qt.getQQid(), qt);
			ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("QQ.txt"));
			oos.writeObject(user);
			oos.flush();
			oos.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	//读取文件内容
	public void readFile(){
		try{
			File file = new File("QQ.txt");
			//文件不存在就结束
			if(!file.exists()){
				return;
			}
			FileInputStream fis = new FileInputStream(file);
			ObjectInputStream ois = new ObjectInputStream(fis);
			//成员变量，不是局部变量
			hm = (HashMap<Integer, QQidtable>)ois.readObject();
			Set<Integer> set = hm.keySet();
			Iterator<Integer> it = set.iterator();
			while(it.hasNext()){
				txtQQid.addItem(it.next());
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		
	}

	public void itemStateChanged(ItemEvent e) {
		if(txtQQid.getSelectedItem()!=null){
			int qqcode = Integer.parseInt(txtQQid.getSelectedItem().toString());
			QQidtable idtable = hm.get(qqcode);
			password.setText(idtable.getQQpassword());
			head.setIcon(new ImageIcon(idtable.getQQhead()));
			System.out.println(head);
		}
		
	}
	public void jbInit() {

		if (SystemTray.isSupported()) { // 检查当前系统是否支持系统托盘

			SystemTray tray = SystemTray.getSystemTray();// 获取表示桌面托盘区的
															// SystemTray 实例。

			Image image = Toolkit.getDefaultToolkit().getImage("image/11l.png");

			PopupMenu popupMenu = new PopupMenu();

			MenuItem exitItem = new MenuItem("关闭");

			MenuItem menuItema = new MenuItem("最小化");

			MenuItem menuItemb = new MenuItem("最大化");

			final MenuItem menuItemc = new MenuItem("注册用户");

			MenuItem menuItemd = new MenuItem("menu d");

			exitItem.addActionListener(new ActionListener() {

				public void actionPerformed(ActionEvent e) {

					try {

						System.exit(0);

					} catch (Exception ex) {

						ex.printStackTrace();

					}

				}

			});

			popupMenu.add(menuItema);

			popupMenu.add(menuItemb);

			popupMenu.add(menuItemc);

			popupMenu.add(menuItemd);

			popupMenu.add(exitItem);

			trayIcon = new TrayIcon(image, "系统托盘{kissjava}", popupMenu);

			trayIcon.addMouseListener(new java.awt.event.MouseAdapter() {
			});
			try {
				tray.add(trayIcon); // 将 TrayIcon 添加到 SystemTray。

			} catch (AWTException e) {

				System.err.println(e);

			}

		} else {

			System.out.println("你的系统不支持系统托盘");

		}

		ImageIcon icon = new ImageIcon();

		try {

			

		} catch (Exception e) {

		}

		JLabel label = new JLabel();

		label.setIcon(icon);

		this.add(label);

	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource()==lbzhuce) {
			new QQmainfase();
		}else if (e.getSource()==lbfindpwd) {
			JOptionPane.showMessageDialog(this, "你点击了找回密码");
		}
	}
	int x,y;
	public void mouseEntered(MouseEvent e) {
		
	}
	public void mouseExited(MouseEvent e) {
		
	}
	public void mousePressed(MouseEvent e) {
		x= this.getX();
		y= this.getY();
	}
	public void mouseReleased(MouseEvent e) {
	}
	public void mouseDragged(MouseEvent e) {
		this.setLocation(x+e.getX(),y+e.getY());
		x= this.getX()/2;
		y= this.getY()/2;
	
	}
	public void mouseMoved(MouseEvent e) {
		
	}

}
